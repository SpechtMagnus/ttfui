{"version":3,"file":"kotlin-extensions.js","sources":["../../../src/main/kotlin/kotlinext/js/CommonJS.kt","generated/_Arrays.kt","../../../src/main/kotlin/kotlinext/js/Function.kt","../../../src/main/kotlin/kotlinext/js/Helpers.kt","util/Standard.kt","../../../src/main/kotlin/kotlinext/js/Object.kt","../../../src/main/kotlin/kotlinext/js/TemplateTag.kt","kotlin/kotlin.kt"],"sourcesContent":[null,null,null,"package kotlinext.js\n\ninline fun <T : Any> jsObject(builder: T.() -> Unit): T {\n    val obj: T = js(\"({})\")\n    return obj.apply {\n        builder()\n    }\n}\n\ninline fun js(builder: dynamic.() -> Unit): dynamic = jsObject(builder)\n\nfun <T : Any> clone(obj: T) = Object.assign(jsObject<T> {}, obj)\n\ninline fun <T : Any> assign(obj: T, builder: T.() -> Unit) = clone(obj).apply(builder)\n\n@Deprecated(\n        message = \"Use Object.assign instead\",\n        replaceWith = ReplaceWith(\"Object.assign(dest, src)\",\"kotlinext.js\")\n)\nfun <T, R : T> assign(dest: R, src: T): R = Object.assign(dest, src)\n\nfun toPlainObjectStripNull(obj: Any) = js {\n    for (key in Object.keys(obj)) {\n        val value = obj.asDynamic()[key]\n        if (value != null) this[key] = value\n    }\n}\n","/*\n * Copyright 2010-2018 JetBrains s.r.o. and Kotlin Programming Language contributors.\n * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.\n */\n\n@file:kotlin.jvm.JvmMultifileClass\n@file:kotlin.jvm.JvmName(\"StandardKt\")\npackage kotlin\n\nimport kotlin.contracts.*\n\n/**\n * An exception is thrown to indicate that a method body remains to be implemented.\n */\npublic class NotImplementedError(message: String = \"An operation is not implemented.\") : Error(message)\n\n/**\n * Always throws [NotImplementedError] stating that operation is not implemented.\n */\n\n@kotlin.internal.InlineOnly\npublic inline fun TODO(): Nothing = throw NotImplementedError()\n\n/**\n * Always throws [NotImplementedError] stating that operation is not implemented.\n *\n * @param reason a string explaining why the implementation is missing.\n */\n@kotlin.internal.InlineOnly\npublic inline fun TODO(reason: String): Nothing = throw NotImplementedError(\"An operation is not implemented: $reason\")\n\n\n\n/**\n * Calls the specified function [block] and returns its result.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#run).\n */\n@kotlin.internal.InlineOnly\npublic inline fun <R> run(block: () -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    return block()\n}\n\n/**\n * Calls the specified function [block] with `this` value as its receiver and returns its result.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#run).\n */\n@kotlin.internal.InlineOnly\npublic inline fun <T, R> T.run(block: T.() -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    return block()\n}\n\n/**\n * Calls the specified function [block] with the given [receiver] as its receiver and returns its result.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#with).\n */\n@kotlin.internal.InlineOnly\npublic inline fun <T, R> with(receiver: T, block: T.() -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    return receiver.block()\n}\n\n/**\n * Calls the specified function [block] with `this` value as its receiver and returns `this` value.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#apply).\n */\n@kotlin.internal.InlineOnly\npublic inline fun <T> T.apply(block: T.() -> Unit): T {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    block()\n    return this\n}\n\n/**\n * Calls the specified function [block] with `this` value as its argument and returns `this` value.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#also).\n */\n@kotlin.internal.InlineOnly\n@SinceKotlin(\"1.1\")\npublic inline fun <T> T.also(block: (T) -> Unit): T {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    block(this)\n    return this\n}\n\n/**\n * Calls the specified function [block] with `this` value as its argument and returns its result.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#let).\n */\n@kotlin.internal.InlineOnly\npublic inline fun <T, R> T.let(block: (T) -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    return block(this)\n}\n\n/**\n * Returns `this` value if it satisfies the given [predicate] or `null`, if it doesn't.\n */\n@kotlin.internal.InlineOnly\n@SinceKotlin(\"1.1\")\npublic inline fun <T> T.takeIf(predicate: (T) -> Boolean): T? {\n    contract {\n        callsInPlace(predicate, InvocationKind.EXACTLY_ONCE)\n    }\n    return if (predicate(this)) this else null\n}\n\n/**\n * Returns `this` value if it _does not_ satisfy the given [predicate] or `null`, if it does.\n */\n@kotlin.internal.InlineOnly\n@SinceKotlin(\"1.1\")\npublic inline fun <T> T.takeUnless(predicate: (T) -> Boolean): T? {\n    contract {\n        callsInPlace(predicate, InvocationKind.EXACTLY_ONCE)\n    }\n    return if (!predicate(this)) this else null\n}\n\n/**\n * Executes the given function [action] specified number of [times].\n *\n * A zero-based index of current iteration is passed as a parameter to [action].\n *\n * @sample samples.misc.ControlFlow.repeat\n */\n@kotlin.internal.InlineOnly\npublic inline fun repeat(times: Int, action: (Int) -> Unit) {\n    contract { callsInPlace(action) }\n\n    for (index in 0 until times) {\n        action(index)\n    }\n}\n","package kotlinext.js\n\nexternal interface PropertyDescriptor<T> {\n    var configurable: Boolean\n    var enumerable: Boolean\n    var value: T\n    var writable: Boolean\n    var get: () -> T\n    var set: (v: T) -> Unit\n}\n\nexternal interface JsObject {\n    fun toLocaleString(): String\n    fun valueOf(): dynamic\n    fun hasOwnProperty(v: String): Boolean\n    fun isPrototypeOf(v: Any): Boolean\n    fun propertyIsEnumerable(v: String): Boolean\n}\n\nfun Any.asJsObject() = this as JsObject\n\nexternal object Object {\n    fun <P, T : P> getPrototypeOf(o: T): P?\n    fun <T> getOwnPropertyDescriptor(o: Any, p: String): PropertyDescriptor<T>\n    fun getOwnPropertyNames(o: Any): Array<String>\n    fun create(o: Nothing?, properties: dynamic = definedExternally): Any\n    fun <T> create(o: T, properties: dynamic = definedExternally): T\n    fun <T, P> defineProperty(o: T, p: String, attributes: PropertyDescriptor<P>): T\n    fun <T> defineProperties(o: T, properties: dynamic): T\n    fun <T> seal(o: T): T\n    fun <R, T : R> freeze(o: T): R\n    fun <T> preventExtensions(o: T): T\n    fun isSealed(o: Any): Boolean\n    fun isFrozen(o: Any): Boolean\n    fun isExtensible(o: Any): Boolean\n    fun keys(o: Any): Array<String>\n    fun <T, R : T> assign(dest: R, vararg src: T): R\n}\n\nfun Any.getOwnPropertyNames(): Array<String> {\n    @Suppress(\"UNUSED_VARIABLE\")\n    val me = this\n    return js(\"Object.getOwnPropertyNames(me)\")\n}\n\n@Deprecated(\n    message = \"Use Object.assign instead\",\n    replaceWith = ReplaceWith(\"Object.assign(dest, *src)\",\"kotlinext.js\")\n)\nfun <T, R : T> objectAssign(dest: R, vararg src: T): R = Object.assign(dest, *src)\n",null,null],"names":[],"mappings":";;;;;;;EAUA,6B;IAAkD,gBAAf,OAAQ,O;IAAO,sCAAQ,0B;;KAAR,YAAQ,OAAR,E;ICuqV9B,Q;IAAhB,wBAAgB,SAAhB,gB;MAAgB,cAAA,SAAhB,M;MAAsB,OAAO,OAAP,C;;G;qFD5pV1B,+B;IAAqD,iBAAY,QAAZ,C;G;EETrD,6B;IAA2C,kB;G;EAI3C,kC;IACI,iBAAY,GAAZ,C;G;EAIJ,yC;IACI,iBAAY,IAAZ,EAAkB,IAAlB,C;G;EAIJ,+C;IACI,iBAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,C;G;yFCzBJ,mB;IACI,UAAa,E;IAET,QADG,GACH,C;IADJ,OAAO,G;EAGX,C;6EAEA,mB;IANI,UAAa,E;IAM8C,OAJvD,CADG,GACH,C;IAI8C,OAL3C,G;G;EAOX,oB;IARI,YAAa,E;IAQa,OAAA,MAAO,QAP1B,KAO0B,EAAuB,GAAvB,C;G;qFAErC,yB;IAAA,wC;IAAA,+B;MAAwE,gBAAX,MAAM,GAAN,C;MAAiB,OCqE1E,W;MDrEyD,OCsElD,S;K;GDtEX,C;EAEA,6B;IAI4C,OAAA,MAAO,QAAO,IAAP,EAAa,GAAb,C;G;EAEnD,qC;IAlBI,YAAa,E;IAmBM,gB;IAAA,OAAP,MAAO,U;IAAnB,kD;MAAY,UAAZ,Y;MACI,YAAY,IAAgB,GAAhB,C;MACZ,IAAI,aAAJ,C;QApBG,KAoBgB,CAAK,GAAL,IAAY,K;;IAHA,OAjB5B,K;G;EEeX,+B;IAAuB,Q;IAAA,kE;G;EAoBvB,wC;IACI,SACS,S;IACT,OAAJ,MAAM,oBAAK,CAAgB,EAAhB,C;EACX,C;EAEA,iC;IAIyD,Q;IAAA,OAAO,CAAP,aAAO,sBAAO,IAAP,SAAc,GAAd,E;G;EC3ChE,8C;IACI,Q;IAAA,OAAK,CAAL,gBAAK,oBAAK,IAAL,EAAW,OAAX,SAAqB,MAArB,E;G;EAET,6C;IAAiF,2BAAK,CAAQ,MAAR,CAAL,EAAuB,MAAvB,S;G;EACjF,qC;IAAiE,2BCElB,EDFkB,EAAoB,MAApB,S;G;;;;;;;;;;;;;;;;;;;;;;;;;"}